<?xml version="1.0" encoding="ISO-8859-1" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!-- 

Copyright (C) 2018 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<xs:annotation>
		<xs:documentation>The schema for .action.xml files</xs:documentation>
	</xs:annotation>
	<xs:element name="actions">
		<xs:annotation>
			<xs:documentation>Each .action.xml file can describe several actions
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="action" minOccurs="1" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>The action xml is turned into json and loaded	into the designer where it is used to create new objects
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="type">
								<xs:annotation>
									<xs:documentation>The action type is used to uniquely identify this control, it should not contain spaces or punctuation
									</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:pattern value="[a-zA-Z0-9_]{1,}" />
									</xs:restriction>
								</xs:simpleType>
							</xs:element>							
							<xs:element name="name">
								<xs:annotation>
									<xs:documentation>The action name is presented to users when describing, or logging something about this action
									</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:minLength value="1" />
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="class">
								<xs:annotation>
									<xs:documentation>Each action must have a Java class, in the classpath, that extends com.rapid.core.Action
									</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:minLength value="1" />
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="image" minOccurs="0">
								<xs:annotation>
									<xs:documentation>A url for the action image relative to the workflow.jsp document
									</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:minLength value="1" />
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element name="helpHtml" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
									The use of this element will add a ? icon next to the action name and a mouse-over tooltip with the contents will be created
									</xs:documentation>
								</xs:annotation>
							</xs:element>	
							<xs:element name="dependentTypes" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Further control types that this control depends on. This will ensure that all necessary resources are created.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="dependentType" maxOccurs="unbounded">								
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:minLength value="1" />
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:sequence>									
								</xs:complexType>							
							</xs:element>
							<xs:element name="visible" type="xs:boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If set to false the control will not be available in Rapid Admin to select for adding to applications. Often used for legacy and deprecated action, or those used with specialised controls.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="addToNewApplications" type="xs:boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If set to true the action will be added to
										new applications when they are created
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="addToNewDesktopApplications" type="xs:boolean"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If true will be added to new responsive applications. If false will not be added to responsive applications.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="addToNewMobileApplications" type="xs:boolean"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If true will be added to new responsive applications. If false will not be added to responsive applications.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="addToNewFormApplications" type="xs:boolean"
								minOccurs="0">
								<xs:annotation>
									<xs:documentation>If true will be added to new responsive applications. If false will not be added to responsive applications.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="canUseWorkflow" type="xs:boolean" minOccurs="0">
								<xs:annotation>
									<xs:documentation>If set to true the action will be available for adding to workflow
									</xs:documentation>
								</xs:annotation>
							</xs:element>						
							<xs:element name="properties" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="property" minOccurs="1"
											maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="key">
													<xs:annotation>
															<xs:documentation>The property keys are all copied into the object when saving/restoring so there are some reserved words used by the system that should not be used such as: type, name, and comments
															</xs:documentation>
														</xs:annotation>
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:minLength value="1" />
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<xs:element name="name">
														<xs:annotation>
															<xs:documentation>This is displayed to the users
															</xs:documentation>
														</xs:annotation>
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:minLength value="1" />
															</xs:restriction>															
														</xs:simpleType>														
													</xs:element>
													<xs:element name="visible" type="xs:boolean" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Set this optional item to false to not display the property</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="visibility" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Use the value of another property to determine whether this property shows</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="key">								
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:minLength value="1" />
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
																<xs:element name="value">								
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:minLength value="1" />
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
															</xs:sequence>									
														</xs:complexType>							
													</xs:element>
													<xs:element name="setConstructValueFunction"
														minOccurs="0">
														<xs:annotation>
															<xs:documentation>Leave this out to not set a property
																value when the control is constructed
															</xs:documentation>
														</xs:annotation>
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:minLength value="1" />
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<xs:element name="changeValueJavaScript">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:minLength value="1" />
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<xs:element name="getValuesFunction" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Possible values that can be used to
																create selects, radio groups, etc
															</xs:documentation>
														</xs:annotation>
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:minLength value="1" />
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<xs:element name="refreshProperties" type="xs:boolean" minOccurs="0">
														<xs:annotation>
															<xs:documentation>
															Whether changes to this property cause the control's properties to refresh, useful for "switching" properties that might turn on or off other features
															</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="workflowOutput" type="xs:boolean" minOccurs="0">
														<xs:annotation>
															<xs:documentation>
															Whether this property produces an output for workflow
															</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="helpHtml" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>
															The use of this element will add a ? icon next to the property name and a mouse-over tooltip with the contents will be created
															</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="resources" minOccurs="0">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="resource" minOccurs="1" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="filter" minOccurs="0">
														<xs:annotation>
															<xs:documentation>
															Use this element to only include a link to this resource in pages where there is an action with the set property value or values
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																
																<xs:element name="property">
																	<xs:annotation>
																		<xs:documentation>
																		The name of a property of this action to filter on
																		</xs:documentation>
																	</xs:annotation>
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:minLength value="1" />
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>
																
																<xs:element name="value">
																	<xs:annotation>
																		<xs:documentation>
																		The value of the property when this resource is required
																		</xs:documentation>
																	</xs:annotation>
																	<xs:simpleType>
																		<xs:restriction base="xs:string">
																			<xs:minLength value="1" />
																		</xs:restriction>
																	</xs:simpleType>
																</xs:element>

															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="type">
														<xs:annotation>
															<xs:documentation>
																The contents of the plain javascript is written to the rapid.js file and the plain css is written to the application rapid.css file. 
																The javascriptFile and cssFile are written into the html head section includes as links, these are replaced with minified versions for live applications.
																The javascriptLink and cssLink are written into the html head section includes as links, but no minified version are made. 
																The file type resources	are included in the off-line download
															</xs:documentation>
														</xs:annotation>
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:enumeration value="javascript" />
																<xs:enumeration value="css" />																
																<xs:enumeration value="javascriptFile" />
																<xs:enumeration value="cssFile" />																
																<xs:enumeration value="javascriptLink" />
																<xs:enumeration value="cssLink" />
																<xs:enumeration value="file" />
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<xs:element name="contents">
														<xs:simpleType>
															<xs:restriction base="xs:string">
																<xs:minLength value="1" />
															</xs:restriction>
														</xs:simpleType>
													</xs:element>
													<xs:element name="replaceMinIfDifferent" type="xs:boolean" minOccurs="0">
														<xs:annotation>
															<xs:documentation>
															Whether the minified version of this resource should be updated automatically
															</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="actionJavaScript" minOccurs="0">
								<xs:annotation>
									<xs:documentation>This is the client-side JavaScript that will be called, that actually performs the action. Typically the properties will be passed in
									</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:minLength value="1" />
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="xmlVersion" type="xs:integer" use="required">
				<xs:annotation>
					<xs:documentation>This attribute defines the version of the xml file</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>