<?xml version="1.0" encoding="UTF-8" ?>
<actions xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/action.xsd">

<!-- 

Copyright (C) 2022 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

    <action>
    
        <type>control</type>        
        <name>Control</name>	        
	    <class>com.rapid.actions.Control</class>
	    <helpHtml>Changes a property of a control or the page.</helpHtml>
	    
	    <addToNewApplications>true</addToNewApplications>
	     
<!-- 

This action runs JQuery functions against specific controls		
		
-->	    	
	    <properties>
	        
	        <property>
	            <key>targetingType</key>
	            <name>Type</name>
	            <setConstructValueFunction>return "single";</setConstructValueFunction>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
                // for backwards compatibility
                if (!this.targetingType) this.targetingType = "single";
                // return the values
                return [["single","Single"],["bulk","Bulk"]];
                </getValuesFunction>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Whether to target a single control or show a dialogue for many controls.</helpHtml>
	        </property>
	        
		    <property>
	            <key>control</key>
	            <name>Control</name>
	            <visibility>
					<key>targetingType</key>
                    <value>single</value>
                </visibility>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                 <![CDATA[
	                 this.migratedToBulk = false;
	                // default to the selected control if one hasn't been specified
	                if (!this.control  && _selectedControl && _selectedControl.name) this.control = _selectedControl.id;
	                // return the list of all controls on the page with the one for this action selected
	                return "<option value=''>Please select...</option><optgroup label='Page'><option value='" + _page.id + "'>page</option></optgroup>" + getControlOptions(this.control);
	               	]]>
	            </getValuesFunction>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Selects a control on the page to apply the action to.</helpHtml>
	        </property>
	        
	        <property>
	            <key>controls</key>
	            <name>Controls</name>
	            <visibility>
					<key>targetingType</key>
                    <value>bulk</value>
                </visibility>
	            <changeValueJavaScript>controlControls</changeValueJavaScript>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Selects controls on the page to apply actions to.</helpHtml>
	        </property>
	        
	        <property>
	            <key>actionType</key>
	            <name>Action</name>
	            <visibility>
					<key>targetingType</key>
                    <value>single</value>
                </visibility>
	            <changeValueJavaScript>controlActionType</changeValueJavaScript>
	            <getValuesFunction>
if (this.control == _page.id) {
	return ["hide","show","toggle","fadeOut","fadeIn","fadeToggle","enable","disable","addClass","removeClass","toggleClass","removeChildClasses","removeValidation","resize","scrollTo","hideAllDialogues","showError","clearQueue","custom"];
} else {
	return ["hide","show","toggle","slideUp","slideDown","slideToggle","fadeOut","fadeIn","fadeToggle","focus","enable","disable","addClass","removeClass","toggleClass","removeChildClasses","removeValidation","scrollTo","hideDialogue","hideAllDialogues","showError","clearQueue","custom"];
}
	            </getValuesFunction>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Sets a specified action to be carried out. Useful for validation and page load events.</helpHtml>
	        </property>
	        
	        <property>
	            <key>duration</key>
	            <name>Duration (milliseconds)</name>
	            <visibility>
					<key>targetingType</key>
                    <value>single</value>
                </visibility>
	            <setConstructValueFunction>return 1000;</setConstructValueFunction>
	            <changeValueJavaScript>controlActionDuration</changeValueJavaScript>
	            <helpHtml>Sets a total time for the action to be carried out in.</helpHtml>
	        </property>
	        	        
	        <property>
	            <key>styleClass</key>
	            <name>Class</name>
	            <visibility>
					<key>targetingType</key>
                    <value>single</value>
                </visibility>
	            <changeValueJavaScript>controlActionClasses</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
	                return "<option value=''>Please select...</option>" + getStyleClassesOptions(this.styleClass);
	               	]]>
	            </getValuesFunction>
	            <helpHtml>Dropdown list of currently available classes.</helpHtml>
	        </property>
	        
		    <property>
	            <key>command</key>
	            <name>Command</name>
	            <visibility>
					<key>targetingType</key>
                    <value>single</value>
                </visibility>
	            <setConstructValueFunction>return "// Enter JQuery command here. The event object is passed in as \"ev\"";</setConstructValueFunction>
	            <changeValueJavaScript>controlActionCommand</changeValueJavaScript>
	            <helpHtml>Allows you to create customised actions using jQuery. Recommended for advanced programmers.</helpHtml>
	        </property>
	        
	    </properties>
	    
	    <actionJavaScript>
function Action_control(actions) {
	for (var i in actions) {
		var action = actions[i];
		$("#" + action.id)[action["function"]](action.value);
	}
}
	    </actionJavaScript>
	        
    </action> 
</actions>