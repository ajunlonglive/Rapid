<?xml version="1.0" encoding="UTF-8" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2020 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

    <control>
        
        <type>page</type>
        <name>Page</name>
        <helpHtml>This 'control' represents the page and it's properties.</helpHtml>

		<addToNewApplications>true</addToNewApplications>
		
        <canUserInsert>true</canUserInsert>
                	    
	    <properties>
	        
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>pageName</changeValueJavaScript>
	            <helpHtml>Name of the page. Can be completely unique, but it makes sense to make it something meaningful.</helpHtml>
	        </property>
	        	            
	        <property>
	            <key>title</key>
	            <name>Title</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Title of the page that appears in the browser. It is important to set this as something meaningful.</helpHtml>
	        </property>
	        
	        <property>
	            <key>formPageType</key>
	            <name>Form page type</name>
	            <setConstructValueFunction>return "";</setConstructValueFunction>
	            <changeValueJavaScript>formPageType</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
return [[0,"Normal"],[1,"Submission confirmation"],[2,"Submission error"],[3,"Save page"],[4,"Resume page"]];
					]]>
	            </getValuesFunction>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Gives the page a special type on the form. Pages set to values other than normal will only appear after meeting certain conditions in validation and visibility, all in relation to the state of a user's form submission.</helpHtml>
	        </property>
	        
	         <property>
	            <key>label</key>
	            <name>Form summary label</name>
	            <setConstructValueFunction>return "";</setConstructValueFunction>
	            <changeValueJavaScript>formText</changeValueJavaScript>
	            <helpHtml>Sets the title of the summary at the end of a form submission.</helpHtml>
	        </property>
	        
	        <property>
	            <key>description</key>
	            <name>Description</name>
	            <changeValueJavaScript>bigtext</changeValueJavaScript>
	            <helpHtml>Sets some additional notes that describes the page. These may appear public to your users.</helpHtml>
	        </property>
	        
	         <property>
	            <key>simple</key>
	            <name>Simple</name>
	            <setConstructValueFunction>return false;</setConstructValueFunction>
	            <changeValueJavaScript>simple</changeValueJavaScript>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Setting a page as simple will remove a lot of the common capabilities of the page, such as validation rules. Enabling this will make the page a lot more lightweight and will run a lot faster in your app. This is most helpful when setting up a page that will be repeated commonly throughout your app as a page panel, for example a footer or header.</helpHtml>
	        </property>
	        
	        <property>
	            <key>hideHeaderFooter</key>
	            <name>Hide header / footer</name>
	            <setConstructValueFunction>return false;</setConstructValueFunction>
	            <changeValueJavaScript>checkbox</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Whether or not to exclude any theme header or footer in this page</helpHtml>
	        </property>
	        
	        <property>
	            <key>roles</key>
	            <name>User roles</name>
	            <changeValueJavaScript>roles</changeValueJavaScript>
	            <helpHtml>Only allows the viewing of the page based on the type of privileges a user has.</helpHtml>
	        </property>
	        
	        <!-- 
	        
	        <property>
	            <key>sessionVariables</key>
	            <name>Variables</name>
	            <changeValueJavaScript>pageSessionVariables</changeValueJavaScript>
	            <helpHtml>Enables the current page to be aware of values that are set in other pages. Particularly useful for page visibility rules.</helpHtml>
	        </property>
	        
	        -->
	        
	        <property>
	            <key>pageVariables</key>
	            <name>Variables</name>
	            <changeValueJavaScript>pageVariables</changeValueJavaScript>
	            <helpHtml>Values that can be set in the page url, often by navigation. Tick the checkbox to store the value in the session to persist it across pages.</helpHtml>
	        </property>
	               	        
	        <property>
	            <key>visibilityConditions</key>
	            <name>Visibility conditions</name>
	            <changeValueJavaScript>visibilityConditions</changeValueJavaScript>
	            <helpHtml>Sets the rules of the page appearing or not based on earlier values in the form.</helpHtml>
	        </property>
	        
	        <property>
	            <key>comments</key>
	            <name>Comments</name>
	            <changeValueJavaScript>bigtext</changeValueJavaScript>
	            <helpHtml>Sets additional comments for the page. These are more private than the description. Comments left here can be useful for other developers that may work on your app.</helpHtml>
	        </property>
	        
	        <property>
	            <key>gap1</key>
	            <name>General</name>
	            <setConstructValueFunction>return "General"</setConstructValueFunction>
	            <changeValueJavaScript>gap</changeValueJavaScript>
	            <helpHtml>These properties control more general features of how pages behave and display in the Rapid Designer</helpHtml>
	        </property>
	        
	        <property>
	            <key>device</key>
	            <name>Device</name>
	            <setConstructValueFunction>return 0;</setConstructValueFunction>
	            <changeValueJavaScript>device</changeValueJavaScript>
	            <helpHtml>Emulates the views of different devices.</helpHtml>
	        </property>
	               
	        <property>
	            <key>orientation</key>
	            <name>Orientation</name>
	            <setConstructValueFunction>return "P";</setConstructValueFunction>
	            <changeValueJavaScript>orientation</changeValueJavaScript>
	            <helpHtml>Sets the page orientation from portrait to landscape. Better used when emulating mobile or tablet devices.</helpHtml>
	        </property>
	        
	        <property>
	            <key>zoom</key>
	            <name>Zoom</name>
	            <setConstructValueFunction>return 1;</setConstructValueFunction>
	            <changeValueJavaScript>zoom</changeValueJavaScript>
	            <helpHtml>Alters the zoom of the page. Better used when emulating mobile or tablet devices</helpHtml>
	        </property>
	        
	        <property>
	            <key>reloadOnSave</key>
	            <name>Reload on save</name>
	            <setConstructValueFunction>return true;</setConstructValueFunction>
	            <changeValueJavaScript>reloadOnSave</changeValueJavaScript>
	            <helpHtml>Whether to automatically reload the app page when saved in the designer.</helpHtml>
	        </property>
	        
	        <property>
	            <key>guidelines</key>
	            <name>Show guidelines</name>
	            <setConstructValueFunction>return true;</setConstructValueFunction>
	            <changeValueJavaScript>guidelines</changeValueJavaScript>
	            <helpHtml>Enables a grid to become visible. Particularly useful for arranging controls on the page.</helpHtml>
	        </property>
	        
	        <property>
	            <key>scrollbars</key>
	            <name>Show scroll bars</name>
	            <setConstructValueFunction>return false;</setConstructValueFunction>
	            <changeValueJavaScript>scrollbars</changeValueJavaScript>
	            <helpHtml>Shows the scroll bars on panels.</helpHtml>
	        </property>
	        
	        <property>
	            <key>pageOrder</key>
	            <name>Page order</name>
	            <changeValueJavaScript>pageOrder</changeValueJavaScript>
	            <helpHtml>Dropdown list containing the order of all the pages created on your app. These can be rearranged by using the arrow icon in the dropdown menu.</helpHtml>
	        </property>
	        
	    </properties>
	    
	    <resources>
	        <resource>
	            <type>javascriptFile</type>
	            <contents>scripts/jquery-3.6.0.js</contents>
	        </resource>
	        <resource>
	            <type>javascriptFile</type>
	            <contents>scripts/extras.js</contents>
	            <replaceMinIfDifferent>true</replaceMinIfDifferent>
	        </resource>
	        <resource>
	            <type>javascriptFile</type>
	            <contents>scripts/json2.js</contents>
	        </resource>
	        <resource>
	            <type>javascript</type>
	            <contents>
                    <![CDATA[
function Event_error(eventName, controlId, ex) {
	if (controlId) {
		alert("Error in " + eventName + " event for control " + controlId + "  " + ex);
	} else {
		alert("Error in " + eventName + " event for page " + ex);
	}
}

if (typeof _rapidmobile == "undefined") {
	if ('serviceWorker' in navigator) {
		console.log('CLIENT: service worker registration in progress.');
		navigator.serviceWorker.register('sw.js')
		.then(function(registration) {
			console.log('CLIENT: service worker registration complete.');
		}).catch(function(error) {
			console.log('CLIENT: service worker registration failure : ' + error);
		});
	} else {
		console.log('CLIENT: service worker is not supported.');
	}
}
                    ]]>
                </contents>
	        </resource>
            <resource>
                <type>css</type>
                <contents>
                    <![CDATA[
                                                 
/* Loading */

div.loadingCover {
	position: absolute;
}

div.loading {
	background-color: black;
	opacity:0.2;
	filter:alpha(opacity=20); 
	text-align: center;
	vertical-align: middle;
}

span.loading {
	position: absolute;
	background: url("../../../images/wait_120x15.gif");
	background-repeat : no-repeat;
	width: 120px;
	height: 15px;
	border: 2px solid #777;
	display: none;
}

                    ]]>
                </contents>                
            </resource>      
            <resource>
                <type>file</type>
                <contents>images/wait_120x15.gif</contents>
            </resource>    
            <resource>
                <type>file</type>
                <contents>images/gear_24x24.png</contents>
            </resource>
            <resource>
                <type>file</type>
                <contents>images/alert_16x16.png</contents>
            </resource>    
            <resource>
                <type>file</type>
                <contents>images/RapidLogo_60x40.png</contents>
            </resource>  
        </resources>
	    
	    <getHtmlFunction>
	        <![CDATA[       
	        ]]>
	    </getHtmlFunction>  
	    
	    <appendJavaScript>
	        <![CDATA[       
	        ]]>	        
	    </appendJavaScript>
	    	    
	    <events>
	        <event>
	            <type>pageload</type>
	            <name>Load</name>
	        </event>
	        <event>
	            <type>resume</type>
	            <name>Resume</name>
	        </event>
	        <event>
	            <type>reusable</type>
	            <name>Reusable</name>
	        </event>
	    </events> 
	    
	    <styles>       
	        <style>
	            <name>body</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "body";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	    </styles>
	    	    	    
    </control> 
</controls>