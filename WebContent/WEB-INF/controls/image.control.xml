<?xml version="1.0" encoding="UTF-8" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2021 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<control>
	    
	    <type>image</type>
	    <name>Image</name>
	    <image>images/image.svg</image>
	    <helpHtml>An image with Alt text for screen readers.</helpHtml>
	    
	    <addToNewApplications>true</addToNewApplications>
	    <noDefaultName>true</noDefaultName>
	            
	    <canUserAdd>true</canUserAdd>
	    <canUserMove>true</canUserMove>
	    <canUserAddPeers>true</canUserAddPeers>
	    	    
	    <properties>
	        
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Name that can be given to the control. Names are used to help identify controls uniquely.</helpHtml>
	        </property>
	                  
	        <property>
	            <key>title</key>
	            <name>Title</name>
	            <setConstructValueFunction>return this.name;</setConstructValueFunction>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Displays a message when hovered over.</helpHtml>
	        </property>
	        
	         <property>
	            <key>alt</key>
	            <name>Alt text</name>
	            <setConstructValueFunction>return this.name;</setConstructValueFunction>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Text to display as an alternative if the image does not load or if someone is using a screen reader.</helpHtml>
	        </property>
	        
	        <property>
	            <key>file</key>
	            <name>File</name>
	            <setConstructValueFunction>return "../../../images/RapidLogo_60x40.png"</setConstructValueFunction>
	            <changeValueJavaScript>imageFile</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Facility to upload and use images. By default it adds in the Rapid logo as an example.</helpHtml>
	        </property>
	        
	    </properties>
	    
	    <getHtmlFunction>
	        <![CDATA[	   	        
// check for a file
if (this.file && this.file.indexOf("RapidLogo_60x40.png") < 0) {
	// clean up any slashes
	if (this.file.indexOf("/") >= 0) this.file = this.file.substr(this.file.lastIndexOf("/") + 1);
} else {
	this.file = "../../../images/RapidLogo_60x40.png";
}	 
var title = (this.title) ? " title='" + this.title + "'" : "";
var alt = (this.alt) ? " alt='" + this.alt + "'" : "";
return "<img id='" + this.id + "' src='applications/" + _version.id + "/" + _version.version + "/" + this.file + "'" + title + alt + " class='image" + getStyleClasses(this) + "' ></img>"
	        ]]>
	    </getHtmlFunction>
	    
	    <getDataFunction>
	        <![CDATA[
return $("#" + id).attr("src");
			]]>
	    </getDataFunction>
	    
	    <setDataJavaScript>
	        <![CDATA[
var control = $("#" + id);	        
if (data != null && data !== undefined) {	
	data = makeDataObject(data, field);
	if (data.rows && data.rows[0]) {	        		
		if (field && data.fields) {
			for (var i in data.fields) {
				if (data.fields[i] && data.fields[i].toLowerCase() == field.toLowerCase()) {
					control.html(data.rows[0][i]);
					break;
				}
			}
		} else {
			control.attr("src",data.rows[0][0]);
		}
	} else {
		control.attr("src","");
	}
} else {
	control.attr("src","");
}
			]]>
	    </setDataJavaScript>
	    
	    <events>
	        <event>
	            <type>click</type>
	            <name>Click</name>
	        </event>
	    </events>
	    
	    <styles>
	        <style>
	            <name>Image</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id;
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	    </styles>
	    	    
	</control>
</controls>